<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTipTool.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>148, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMABRkADDYDF1QGHmYAAggAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAByMG
        IncUR8YiYuUsc/Yvef0uc+8ACCMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAByMHK6EVUOMfYvYlavkqcfstd/wvef06g/wEFUgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA
        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
        1ysA1ysA2CsA1ysAyiYAnxgAQgYACQAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABwAAHwIARwYAghAAoRcArhsAth4AuSAAuB8AsR4ApRoAhRIASQcAHQEABgAAAQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAABwAA
        DgEAEgEAEgEAEgEADQEABgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////////////////////////8D///4A///4AP//8ACAf+AAAA/gAAADwAA
        AAcAAAADAAAAAwABAAGAAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB+AAAAfgAAAP8AAAH/wAAD//A
        AD//+AP//////////////////////w==
</value>
  </data>
</root>